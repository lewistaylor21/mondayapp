(()=>{function n(){console.log("testVanillaJS function called");var n=document.getElementById("root");console.log("Root element:",n),n?(n.innerHTML='\n            <div style="\n                padding: 20px; \n                background: white; \n                border: 2px solid red; \n                margin: 20px;\n                font-family: Arial;\n            ">\n                <h1 style="color: green;">✅ VANILLA JS WORKING!</h1>\n                <p><strong>Time:</strong> '.concat((new Date).toLocaleString(),'</p>\n                <p><strong>Bundle loaded:</strong> YES</p>\n                <p><strong>DOM access:</strong> YES</p>\n                <button onclick="alert(\'Button clicked! JavaScript events work!\')" \n                        style="padding: 10px 20px; background: blue; color: white; border: none; cursor: pointer;">\n                    Test Click Event\n                </button>\n                <div style="margin-top: 20px; font-size: 12px; color: #666;">\n                    If you see this, the JavaScript bundle is loading and executing correctly.\n                    The issue is with React, not the bundle system.\n                </div>\n            </div>\n        '),console.log("✅ Vanilla JS content injected successfully")):(console.error("❌ Root element not found!"),document.body.innerHTML='\n            <div style="padding: 20px; background: red; color: white; font-family: Arial;">\n                <h1>❌ ROOT ELEMENT NOT FOUND</h1>\n                <p>The &lt;div id="root"&gt;&lt;/div&gt; element is missing from the HTML.</p>\n            </div>\n        ')}console.log("=== VANILLA JS TEST - BUNDLE IS LOADING ==="),console.log("Time:",(new Date).toISOString()),"loading"===document.readyState?(console.log("DOM is still loading, waiting for DOMContentLoaded..."),document.addEventListener("DOMContentLoaded",n)):(console.log("DOM already loaded, running immediately..."),n()),setTimeout(function(){console.log("Backup timeout fired - running testVanillaJS"),n()},1e3)})();